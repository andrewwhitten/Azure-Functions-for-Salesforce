using System;
using System.IO;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Azure.WebJobs;
using Microsoft.Azure.WebJobs.Extensions.Http;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.Logging;
using Newtonsoft.Json;

using SfdcEnterprise;       // Enterprise WSDL generated by Salesforce. Note the small modification in the README.

namespace SalesforceUtils
{
    /// <summary>
    /// Quick Start example to enter an Account
    /// </summary>
    public class QuickStartExamples : SalesforceFunctionBase
    {

        /// <summary>
        /// Representation of Salesforce Account object (not complete)
        /// </summary>
        public class AccountData
        {
            public string name { get; set; }    
            public string accountNumber { get; set; }
            public string industry { get; set; }
            public string type { get; set; }
            public string website { get; set; }
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="req"></param>
        /// <param name="log"></param>
        /// <returns></returns>
        [FunctionName("AddAccounts")]
        public static async Task<IActionResult> Run(
            [HttpTrigger(AuthorizationLevel.Function, "get", "post", Route = null)] HttpRequest req,
            ILogger log)
        {
            log.LogInformation("Create Salesforce Account - function processed a request.");

            string requestBody = await new StreamReader(req.Body).ReadToEndAsync();

            AccountData a = JsonConvert.DeserializeObject<AccountData>(requestBody as string);

            bool success = true;

            // If the login and soap clients are not initiated, then initialize
            if (loginClient == null || soapClient == null)
            {
                success = await InitializeClients();

                // Response message
                string initMessage = success
                    ? "Salesforce Web Clients created successfully."
                    : $"Salesforce Web Clients not created successfully.";

                Console.WriteLine(initMessage);

                if(!success)
                {
                    return new OkObjectResult(initMessage);
                }
            }

            //Copy JSON object to Salesforce
            Account account = new();
            account.Name = a.name;
            account.AccountNumber = a.accountNumber;
            account.Industry = a.industry;
            account.Type = a.type;
            account.Website = a.website;

            var objects = new sObject[] { account };

            createRequest cr = new();
            cr.sObjects = objects;
            cr.SessionHeader = header;

            createResponse cresponse;

            String resultId = "";
            String responseMessage = "";

            try
            {
                cresponse = await soapClient.createAsync(cr);

                SaveResult[] saveResult = cresponse.result;

                if(saveResult != null && saveResult.Length > 0)
                {
                    SaveResult firstSaveResult = saveResult[0];

                    if (firstSaveResult.success)
                    {
                        resultId = firstSaveResult.id;

                        responseMessage = $"Salesforce Account {resultId} created successfully.";
                    }
                    else
                    {
                        // If the operation failed, do we know why?
                        if (firstSaveResult.errors.Length > 0)
                        {
                            responseMessage = firstSaveResult.errors[0].message;
                        }
                        else
                        {
                            responseMessage = $"Unknown error when creating Account";
                        }
                    }
                }
            }
            catch (Exception ex) 
            { 
                Console.WriteLine(ex.ToString()); 
                responseMessage = $"Unknown error when creating Account";
            }

            log.LogInformation(responseMessage);

            return new OkObjectResult(responseMessage);
        }

    }
}
