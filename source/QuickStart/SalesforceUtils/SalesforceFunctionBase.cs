using System;
using System.IO;
using System.ServiceModel;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Azure.WebJobs;
using Microsoft.Azure.WebJobs.Extensions.Http;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.Logging;
using Newtonsoft.Json;

using SfdcEnterprise;       // Enterprise WSDL generated by Salesforce. Note the small modification in the README.

namespace SalesforceUtils
{
    /// <summary>
    /// Abstract class that contains common items required for calling the Salesforce API
    /// </summary>
    abstract public class SalesforceFunctionBase
    {
        // Initialize login parameters
        protected static String userName = Environment.GetEnvironmentVariable("sfdcUserName", EnvironmentVariableTarget.Process);
        protected static String password = Environment.GetEnvironmentVariable("sfdcPassword", EnvironmentVariableTarget.Process);
        protected static String securityToken = Environment.GetEnvironmentVariable("sfdcSecurityToken", EnvironmentVariableTarget.Process);

        protected static SoapClient loginClient; // for login endpoint
        protected static SoapClient soapClient; // for API endpoint
        protected static SessionHeader header;
        protected static EndpointAddress endpoint;

        protected static loginRequest loginRequest;
        protected static loginResponse lresp;

        /// <summary>
        /// Utility method to initialize both SoapClient objects
        /// </summary>
        /// <returns></returns>
        protected static async Task<bool> InitializeClients()
        {
            bool success = false;

            var binding = new BasicHttpBinding(BasicHttpSecurityMode.Transport);
            binding.MaxReceivedMessageSize = 1048576000;
            var loginAddress = new EndpointAddress(string.Format("https://login.salesforce.com/services/Soap/c/{0:f1}", 53.0));

            loginClient = new SoapClient(binding, loginAddress);

            lresp = await SfLogin();

            if (lresp.result.passwordExpired)
            {
                Console.WriteLine("An error has occurred. Your password has expired.");
            }

            // On successful login, cache session info and API endpoint info
            endpoint = new EndpointAddress(lresp.result.serverUrl);

            header = new SessionHeader();
            header.sessionId = lresp.result.sessionId;

            // Create and cache an API endpoint client
            soapClient = new SoapClient(binding, endpoint);

            if(soapClient != null)
            {
                success = true;
            }

            return success;
        }

        /// <summary>
        /// Login to Salesforce
        /// </summary>
        /// <returns>Login Response</returns>
        static async Task<loginResponse> SfLogin()
        {
            loginResponse lr = null;

            try
            {
                LoginScopeHeader loginScopeHeader = new LoginScopeHeader();
                loginRequest = new loginRequest(loginScopeHeader, userName, password + securityToken);
                lr = await loginClient.loginAsync(loginRequest);
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.StackTrace);
            }

            return lr;
        }
    }
}
